{"version":3,"sources":["../src/hal-property.decorator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAsD,MAAM,6BAA6B,CAAC;AAGlH,MAAM,sBAAsB,YAAoB;IAC5C,MAAM,CAAC,UAAS,MAAU,EAAE,GAAU;QAElC,EAAE,CAAA,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,8BAA8B,CAAC,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC,eAAe,CAAC,8BAA8B,CAAC,GAAG,IAAI,KAAK,EAAqB,CAAC;QAC5F,CAAC;QACD,MAAM,CAAC,eAAe,CAAC,8BAA8B,CAAC,CAAC,IAAI,CAAC;YACxD,YAAY,EAAC,YAAY,CAAA,CAAC,CAAA,YAAY,CAAA,CAAC,CAAA,GAAG;YAC1C,WAAW,EAAC,GAAG;SAClB,CAAC,CAAC;IAEP,CAAC,CAAA;AACL,CAAC;AAED,MAAM,kBAAsC,KAAe,EAAC,YAAoB;IAC5E,MAAM,CAAC,UAAS,MAAU,EAAE,GAAU;QAElC,EAAE,CAAA,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,eAAe,CAAC,yBAAyB,CAAC,GAAG,IAAI,KAAK,EAAiB,CAAC;QACnF,CAAC;QACD,MAAM,CAAC,eAAe,CAAC,yBAAyB,CAAC,CAAC,IAAI,CAAC;YACnD,KAAK,EAAC,KAAK;YACX,YAAY,EAAC,YAAY,CAAA,CAAC,CAAA,YAAY,CAAA,CAAC,CAAA,GAAG;YAC1C,WAAW,EAAC,GAAG;SAClB,CAAC,CAAC;IACP,CAAC,CAAA;AACL,CAAC;AAED,MAAM,qBAAyC,YAAmB;IAC9D,MAAM,CAAC,UAAS,MAAU,EAAE,GAAU;QAElC,EAAE,CAAA,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,eAAe,CAAC,4BAA4B,CAAC,GAAG,IAAI,KAAK,EAAoB,CAAC;QACzF,CAAC;QACD,MAAM,CAAC,eAAe,CAAC,4BAA4B,CAAC,CAAC,IAAI,CAAC;YACtD,WAAW,EAAC,GAAG;YACf,YAAY,EAAC,YAAY;SAC5B,CAAC,CAAC;IACP,CAAC,CAAA;AACL,CAAC","file":"hal-property.decorator.js","sourceRoot":"","sourcesContent":["import { HalModelBuilder, HalLinkConfig, HalPropertyConfig, HalResolveConfig } from './hal-model-builder.service';\r\nimport { HalModel } from './hal-model';\r\n\r\nexport function HalProperty(relationName?:string) {\r\n    return function(target:any, key:string) {\r\n\r\n        if(!target[HalModelBuilder.PROTOTYPE_IDENT_HAL_PROPERTIES]) {\r\n            target[HalModelBuilder.PROTOTYPE_IDENT_HAL_PROPERTIES] = new Array<HalPropertyConfig>();\r\n        }\r\n        target[HalModelBuilder.PROTOTYPE_IDENT_HAL_PROPERTIES].push({\r\n            relationName:relationName?relationName:key,\r\n            propertyKey:key\r\n        });\r\n     \r\n    }\r\n}\r\n\r\nexport function HalLink<T extends HalModel>(clazz:{new():T},relationName?:string) {\r\n    return function(target:any, key:string) {\r\n\r\n        if(!target[HalModelBuilder.PROTOTYPE_IDENT_HAL_LINKS]) {\r\n            target[HalModelBuilder.PROTOTYPE_IDENT_HAL_LINKS] = new Array<HalLinkConfig>();\r\n        }\r\n        target[HalModelBuilder.PROTOTYPE_IDENT_HAL_LINKS].push({\r\n            clazz:clazz,\r\n            relationName:relationName?relationName:key,\r\n            propertyKey:key\r\n        });\r\n    }\r\n}\r\n\r\nexport function HalResolve<T extends HalModel>(propertyPath:string) {\r\n    return function(target:any, key:string) {\r\n\r\n        if(!target[HalModelBuilder.PROTOTYPE_IDENT_HAL_RESOLVES]) {\r\n            target[HalModelBuilder.PROTOTYPE_IDENT_HAL_RESOLVES] = new Array<HalResolveConfig>();\r\n        }\r\n        target[HalModelBuilder.PROTOTYPE_IDENT_HAL_RESOLVES].push({\r\n            propertyKey:key,\r\n            propertyPath:propertyPath\r\n        });\r\n    }\r\n}\r\n\r\n"]}